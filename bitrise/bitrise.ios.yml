---
format_version: 1.1.0
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git
app:
  envs:
  - BITRISE_PROJECT_PATH: ios/UenoInternalApp.xcodeproj
    opts:
      is_expand: false
  - BITRISE_SCHEME: UenoInternalApp
    opts:
      is_expand: false
trigger_map:
- push_branch: qa
  workflow: qa
workflows:
  _xcode_archive:
    steps:
    - certificate-and-profile-installer@1.8.5:
        run_if: '{{enveq "RUN_XCODE_ARCHIVE" "1"}}'
    - xcode-archive@2.0.5:
        run_if: '{{enveq "RUN_XCODE_ARCHIVE" "1"}}'
        inputs:
        - team_id: ''
        - configuration: ''
        - force_team_id: ''
        - force_code_sign_identity: ''
        - force_provisioning_profile_specifier: ''
        - force_provisioning_profile: ''
        - is_clean_build: 'yes'
        - output_tool: xcodebuild
        - is_export_xcarchive_zip: 'yes'
        - custom_export_options_plist_content: ''
    - deploy-to-bitrise-io@1.2.9:
        is_always_run: false
        run_if: '{{enveq "RUN_XCODE_ARCHIVE" "1"}}'
        inputs:
        - notify_user_groups: none
        - notify_email_list:
    before_run:
    after_run:
    envs:
    - KEY: ''
      opts:
        is_expand: true
  _init_install:
    steps:
    - activate-ssh-key@3.1.1: {}
    - git-clone@3.4.3:
        inputs:
        - clone_depth: ''
    - script@1.1.3:
        title: Set Full Build
        inputs:
        - content: |-
            #!/bin/bash
            if [[ "$GIT_CLONE_COMMIT_MESSAGE_SUBJECT" == *"[FULL BUILD]"* ]]
            then
              envman add --key RUN_XCODE_ARCHIVE --value 1
            else
              envman add --key RUN_XCODE_ARCHIVE --value 0
            fi

    - script@1.1.3:
        title: Install npm-cache
        inputs:
        - content: |-
            #!/bin/bash

            npm install -g npm-cache
    - cache-pull@0.9.2: {}
    - script@1.1.3:
        title: npm-cache install
        inputs:
        - content: |-
            #!/bin/bash

            npm-cache install --cacheDirectory .
    - cache-push@0.9.4:
        inputs:
        - cache_paths: "./npm"
    - npm:
        title: NPM Install
        inputs:
        - command: install
    - npm:
        title: Install CodePush CLI
        inputs:
        - command: install -g code-push-cli
    before_run:
    after_run:
  _slack_message:
    steps:
    - slack@2.3.0:
        inputs:
        - webhook_url: #YOUR_SLACK_WEBHOOK
        - channel: "#engineering-alerts"
        - from_username: Bitrise CI - iOS $ENVIRONMENT CodePush Deploy Succeeded
        - from_username_on_error: Bitrise CI - iOS $ENVIRONMENT CodePush Deploy Failed
        - message: 'Test the changes on the latest $ENVIRONMENT build. Click here
            to download the build: #your_apps_page'
        - message_on_error: 'Click here to find out why the build failed: $BITRISE_BUILD_URL'
        - emoji: ":confetti_ball:"
        - emoji_on_error: ":shrug:"
    before_run:
    after_run:
  _code_push:
    steps:
    - script:
        title: CodePush Auth
        inputs:
        - content: |-
            #!/bin/bash
            code-push login --accessKey #YOUR_CODEPUSH_KEY
    - script:
        title: CodePush Deploy
        inputs:
        - content: |-
            #!/bin/bash
            echo $GIT_CLONE_COMMIT_HASH
            code-push release-react UenoInternalApp-IOS ios -d $ENVIRONMENT --description "$ENVIRONMENT $GIT_CLONE_COMMIT_MESSAGE_SUBJECT" -m
    before_run:
    after_run:
    envs:
    - KEY: ''
      opts:
        is_expand: true
  qa:
    steps:
    - script@1.1.3:
        title: Set ENVIRONMENT
        inputs:
        - content: |-
            #!/bin/bash
            envman add --key ENVIRONMENT --value "QA"
            envman add --key BITRISE_SCHEME --value "UenoInternalApp QA"
    before_run:
    - _init_install
    after_run:
    - _xcode_archive
    - _code_push
    - _slack_message
    envs:
    - KEY: ''
      opts:
        is_expand: true
  production:
    steps:
    - script@1.1.3:
        title: Set ENVIRONMENT
        inputs:
        - content: |-
            #!/bin/bash
            envman add --key ENVIRONMENT --value "Production"
            envman add --key BITRISE_SCHEME --value "Bitrise Prod"
    - file-downloader@0.9.1:
        inputs:
        - source: "$BITRISEIO_production_env_URL"
        - destination: "$BITRISE_SOURCE_DIR/environment"
    before_run:
    - _init_install
    after_run:
    - _xcode_archive
    - _code_push
    - _slack_message
    envs:
    - KEY: ''
      opts:
        is_expand: true
  staging:
    steps:
    - script@1.1.3:
        title: Set ENVIRONMENT
        inputs:
        - content: |-
            #!/bin/bash
            envman add --key ENVIRONMENT --value "Staging"
            envman add --key BITRISE_SCHEME --value "UenoInternalApp Staging"
    before_run:
    - _init_install
    after_run:
    - _xcode_archive
    - _code_push
    - _slack_message
    envs:
    - KEY: ''
      opts:
        is_expand: true
